/*
See LICENSE folder for this sampleâ€™s licensing information.

Abstract:
The IOKit Interface Generator file that declares the driver's methods.
*/

#ifndef NullUSBDriver_h
#define NullUSBDriver_h

#include <Availability.h>
#include <DriverKit/IOUserClient.iig>
#include <DriverKit/IOTimerDispatchSource.iig>

class NullUSBDriver: public IOService {
protected:
    void PrintExtendedErrorInfo(kern_return_t ret) LOCALONLY;
    kern_return_t USBTransmit(uint8_t *pBuf, uint32_t len) LOCALONLY;
public:
    virtual bool init(void) override;
    virtual kern_return_t Start(IOService* provider) override;
    virtual kern_return_t Stop(IOService* provider) override;
    virtual void free(void) override;
    virtual kern_return_t NewUserClient(uint32_t type, IOUserClient** userClient) override;
    
    

};

#endif /* NullUSBDriver_h */
